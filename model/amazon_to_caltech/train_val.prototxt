name: "amazon_to_caltech"
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  top: "weight"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    mean_value: 104.0
    mean_value: 117.0
    mean_value: 123.0
  }
  image_data_param {
    source: "data/amazon_to_caltech/traina2c.txt"
    batch_size: 64
    shuffle: true
    new_height: 256
    new_width: 256
    class_num: 10
  }
}
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  top: "weight"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    mean_value: 104.0
    mean_value: 117.0
    mean_value: 123.0
  }
  image_data_param {
    source: "data/amazon_to_caltech/testa2c.txt"
    batch_size: 1123
    shuffle: false
    new_height: 256
    new_width: 256
    class_num: 10
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 0.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 0.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1.0
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 0.0
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.0
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 0.1
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1.0
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 0.1
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1.0
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 0.1
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1.0
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 0.1
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1.0
    }
  }
}
layer {
  name: "mmd_fc7"
  type: "MMDLoss"
  bottom: "fc7"
  bottom: "label"
  bottom: "weight"
  top: "fc7"
  mmd_param {
    num_of_kernel: 10
    mmd_lambda: 0.3
    iter_of_epoch: 32
    method_param {
      top_num: 5
      i_lambda: 0.0
    }
    method: "none"
    kernel_mul: 2.0
    fix_gamma: false
    mmd_lr: 10.0
    quad_weight: 0.0
    mmd_lock: 1
    num_class: 10
    entropy_thresh: 10
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8_office"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8_office"
  param {
    lr_mult: 0.1
    decay_mult: 1.0
  }
  param {
    lr_mult: 0.2
    decay_mult: 0.0
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.0
    }
  }
}
layer {
  name: "mmd_fc8"
  type: "MMDLoss"
  bottom: "fc8_office"
  bottom: "label"
  bottom: "weight"
  top: "fc8_office"
  mmd_param {
    num_of_kernel: 10
    mmd_lambda: 0.1
    iter_of_epoch: 32
    method_param {
      top_num: 5
      i_lambda: 0.0
    }
    method: "none"
    kernel_mul: 2.0
    fix_gamma: false
    mmd_lr: 5.0
    quad_weight: 0.0
    mmd_lock: 1
    num_class: 10
    entropy_thresh: 10
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_office"
  bottom: "label"
  loss_param {
    ignore_label: -1
	trainfile: "/home/hsi/mmd-caffe/data/amazon_to_caltech/traina2c.txt"
	#训练数据集，最好用绝对路径比如：
	tmpfile: "/home/hsi/mmd-caffe/data/amazon_to_caltech/traina2ctmp.txt"
	#一个临时文件，,可以先建一个空文件
	num_of_source:958
	#源域上面的样本总数
	num_of_target:1123
	#目标域上的样本总数
	batch_size:1123
	#跟上面测试阶段的batch_size保持一致
	#把test阶段的shuffle改为0；
	#另外数据集（比如traina2c.txt）一定要先是source数据，然后是target数据；
	target_lambda: 1e-5
  }
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc8_office"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
